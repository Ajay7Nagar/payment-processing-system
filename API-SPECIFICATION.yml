openapi: 3.0.3
info:
  title: Payment Processing System API
  version: 1.0.0
servers:
  - url: https://api.example.com
    description: Production
  - url: https://staging.api.example.com
    description: Staging
paths:
  /api/v1/payments/purchase:
    post:
      summary: Execute purchase (auth+capture)
      operationId: purchasePayment
      tags: [Payments]
      security:
        - bearerAuth: [PAYMENTS_WRITE]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
      responses:
        '201':
          description: Payment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
  /api/v1/payments/authorize:
    post:
      summary: Authorize payment
      operationId: authorizePayment
      tags: [Payments]
      security:
        - bearerAuth: [PAYMENTS_WRITE]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
      responses:
        '201':
          description: Authorization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  /api/v1/payments/capture:
    post:
      summary: Capture authorized payment
      operationId: capturePayment
      tags: [Payments]
      security:
        - bearerAuth: [PAYMENTS_WRITE]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureRequest'
      responses:
        '200':
          description: Capture successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  /api/v1/payments/cancel:
    post:
      summary: Cancel authorized payment
      operationId: cancelPayment
      tags: [Payments]
      security:
        - bearerAuth: [PAYMENTS_WRITE]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  /api/v1/payments/refund:
    post:
      summary: Refund settled payment
      operationId: refundPayment
      tags: [Payments]
      security:
        - bearerAuth: [PAYMENTS_WRITE]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
      responses:
        '202':
          description: Refund accepted
  /api/v1/subscriptions:
    post:
      summary: Create subscription
      operationId: createSubscription
      tags: [Subscriptions]
      security:
        - bearerAuth: [SUBSCRIPTIONS_WRITE]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Subscription created
    get:
      summary: List subscriptions
      operationId: listSubscriptions
      tags: [Subscriptions]
      security:
        - bearerAuth: [SUBSCRIPTIONS_READ]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Page of subscriptions
  /api/v1/subscriptions/{subscriptionId}:
    get:
      summary: Get subscription by ID
      operationId: getSubscription
      tags: [Subscriptions]
      security:
        - bearerAuth: [SUBSCRIPTIONS_READ]
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200': { description: Subscription details }
  /api/v1/settlement/export:
    post:
      summary: Trigger settlement export
      operationId: requestSettlementExport
      tags: [Settlement]
      security:
        - bearerAuth: [SETTLEMENT_EXPORT]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementExportRequest'
      responses:
        '202': { description: Export accepted }
  /api/v1/compliance/audit-logs:
    get:
      summary: Query audit logs
      operationId: queryAuditLogs
      tags: [Compliance]
      security:
        - bearerAuth: [COMPLIANCE_OFFICER]
      parameters:
        - name: start
          in: query
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          schema:
            type: string
            format: date-time
        - name: actor
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Page of audit logs
  /api/v1/compliance/audit-logs/export:
    post:
      summary: Export audit logs
      operationId: exportAuditLogs
      tags: [Compliance]
      security:
        - bearerAuth: [COMPLIANCE_OFFICER]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceAuditExportRequest'
      responses:
        '200':
          description: Export payload
  /api/v1/webhooks/authorize-net:
    post:
      summary: Receive Authorize.Net webhook
      operationId: receiveAuthorizeNetWebhook
      tags: [Webhooks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeNetWebhookRequest'
      responses:
        '202':
          description: Webhook accepted and queued
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PurchaseRequest:
      type: object
      required: [customerId, amount, currency, paymentNonce, idempotencyKey, correlationId, requestId]
      properties:
        customerId:
          type: string
          format: uuid
        amount:
          type: number
          format: double
        currency:
          type: string
        paymentNonce:
          type: string
        idempotencyKey:
          type: string
        correlationId:
          type: string
        requestId:
          type: string
    PaymentResponse:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        customerId:
          type: string
          format: uuid
        amount:
          type: number
        currency:
          type: string
        status:
          type: string
        correlationId:
          type: string
    AuthorizeRequest:
      allOf:
        - $ref: '#/components/schemas/PurchaseRequest'
    CaptureRequest:
      type: object
      required: [orderId, amount, actorId]
      properties:
        orderId:
          type: string
          format: uuid
        amount:
          type: number
        actorId:
          type: string
    CancelRequest:
      type: object
      required: [orderId, actorId]
      properties:
        orderId:
          type: string
          format: uuid
        actorId:
          type: string
    RefundRequest:
      type: object
      required: [orderId, amount, lastFour, actorId]
      properties:
        orderId:
          type: string
          format: uuid
        amount:
          type: number
        lastFour:
          type: string
        actorId:
          type: string
    CreateSubscriptionRequest:
      type: object
      required: [customerId, planCode, amount, currency, intervalDays, idempotencyKey]
      properties:
        customerId:
          type: string
          format: uuid
        planCode:
          type: string
        amount:
          type: number
        currency:
          type: string
        intervalDays:
          type: integer
        trialDays:
          type: integer
        idempotencyKey:
          type: string
        correlationId:
          type: string
    SettlementExportRequest:
      type: object
      required: [format, start, end]
      properties:
        format:
          type: string
          enum: [CSV, JSON]
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        filePath:
          type: string
    ComplianceAuditExportRequest:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        actor:
          type: string
        operation:
          type: string
        resourceType:
          type: string
        resourceId:
          type: string
    AuthorizeNetWebhookRequest:
      type: object
      required: [eventId, eventType, payload]
      properties:
        eventId:
          type: string
        eventType:
          type: string
        payload:
          type: object
