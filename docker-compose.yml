x-environment-common: &common-env
  SPRING_PROFILES_ACTIVE: docker
  SECURITY_JWT_SECRET: ${SECURITY_JWT_SECRET:-dGhpcy1pcy1hLXN1cGVyLXNlY3JldC1leGFtcGxlLXN0cmluZw==}
  SPRING_RABBITMQ_HOST: rabbitmq
  SPRING_RABBITMQ_PORT: 5672
  SPRING_RABBITMQ_USERNAME: payments
  SPRING_RABBITMQ_PASSWORD: payments
  MANAGEMENT_TRACING_EXPORTER_ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans

services:
  db:
    image: postgres:14.13-alpine
    environment:
      POSTGRES_DB: payments
      POSTGRES_USER: payments
      POSTGRES_PASSWORD: payments
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payments"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - payments-db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: payments
      RABBITMQ_DEFAULT_PASS: payments
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 12

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"

  zipkin:
    image: openzipkin/zipkin:2.24
    ports:
      - "9411:9411"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9411/health >/dev/null" ]
      interval: 10s
      timeout: 5s
      retries: 12

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      <<: *common-env
      ZIPKIN_BASE_URL: http://zipkin:9411
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/payments
      SPRING_DATASOURCE_USERNAME: payments
      SPRING_DATASOURCE_PASSWORD: payments
      SPRING_MAIN_APPLICATION_CLASS: com.example.payments.PaymentProcessingSystemApplication
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    ports:
      - "8080:8080"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      <<: *common-env
      ZIPKIN_BASE_URL: http://zipkin:9411
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/payments
      SPRING_DATASOURCE_USERNAME: payments
      SPRING_DATASOURCE_PASSWORD: payments
      SPRING_MAIN_APPLICATION_CLASS: com.example.payments.worker.WorkerApplication
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_healthy

volumes:
  payments-db-data:

